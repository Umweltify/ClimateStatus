{"version":3,"file":"bundle.js","sources":["src/HmacUtils.js","src/PartnerAppRequestLogModel.js","src/ClimateStatusMapper.js","src/ApiHandlers.js","src/ClimateinProtocol.js","src/index.js"],"sourcesContent":["function generateNonce() {\r\n    return Math.random().toString(36).substring(2);\r\n}\r\n\r\nasync function generateHmac(appId, appSecret, nonce) {\r\n    const data = `${appId}:${nonce}`\r\n    HMacGenerator.initializeConstants();\r\n    const signature = HMacGenerator.sign(appSecret, data);\r\n    return HMacGenerator.hex(signature);\r\n}\r\n\r\n\r\nconst HMacGenerator = {\r\n    // To ensure cross-browser support even without a proper SubtleCrypto\r\n    // implementation (or without access to the implementation, as is the case with\r\n    // Chrome loaded over HTTP instead of HTTPS), this library can create SHA-256\r\n    // HMAC signatures using nothing but raw JavaScript\r\n\r\n    /* eslint-disable no-magic-numbers, id-length, no-param-reassign, new-cap */\r\n\r\n    // By giving internal names that we can mangle, future calls to\r\n    // them are reduced to a single byte (minor space savings in minified file)\r\n    uint8Array: Uint8Array,\r\n    uint32Array: Uint32Array,\r\n    pow: Math.pow,\r\n\r\n    // Will be initialized below\r\n    // Using a Uint32Array instead of a simple array makes the minified code\r\n    // a bit bigger (we lose our `unshift()` hack), but comes with huge\r\n    // performance gains\r\n    DEFAULT_STATE: new Uint32Array(8),\r\n    ROUND_CONSTANTS: [],\r\n\r\n    // Reusable object for expanded message\r\n    // Using a Uint32Array instead of a simple array makes the minified code\r\n    // 7 bytes larger, but comes with huge performance gains\r\n    M: new Uint32Array(64),\r\n\r\n    // After minification the code to compute the default state and round\r\n    // constants is smaller than the output. More importantly, this serves as a\r\n    // good educational aide for anyone wondering where the magic numbers come\r\n    // from. No magic numbers FTW!\r\n    getFractionalBits(n) {\r\n        return ((n - (n | 0)) * this.pow(2, 32)) | 0;\r\n    },\r\n\r\n    initializeConstants() {\r\n        let n = 2, nPrime = 0;\r\n        const x = 64;\r\n\r\n        while (nPrime < x) {\r\n            // isPrime() was in-lined from its original form to save\r\n            // a few bytes\r\n            let isPrime = true;\r\n\r\n            for (let factor = 2; factor <= n / 2; factor++) {\r\n                if (n % factor === 0) {\r\n                    isPrime = false;\r\n                }\r\n            }\r\n            if (isPrime) {\r\n                if (nPrime < 8) {\r\n                    this.DEFAULT_STATE[nPrime] = this.getFractionalBits(this.pow(n, 1 / 2));\r\n                }\r\n                this.ROUND_CONSTANTS[nPrime] = this.getFractionalBits(this.pow(n, 1 / 3));\r\n                nPrime++;\r\n            }\r\n\r\n            n++;\r\n        }\r\n    },\r\n\r\n    // For cross-platform support we need to ensure that all 32-bit words are\r\n    // in the same endianness. A UTF-8 TextEncoder will return BigEndian data,\r\n    // so upon reading or writing to our ArrayBuffer we'll only swap the bytes\r\n    // if our system is LittleEndian (which is about 99% of CPUs)\r\n    LittleEndian: !!new Uint8Array(new Uint32Array([1]).buffer)[0],\r\n\r\n    convertEndian(word) {\r\n        if (this.LittleEndian) {\r\n            return (\r\n                // byte 1 -> byte 4\r\n                (word >>> 24) |\r\n                // byte 2 -> byte 3\r\n                (((word >>> 16) & 0xff) << 8) |\r\n                // byte 3 -> byte 2\r\n                ((word & 0xff00) << 8) |\r\n                // byte 4 -> byte 1\r\n                (word << 24)\r\n            );\r\n        } else {\r\n            return word;\r\n        }\r\n    },\r\n\r\n    rightRotate(word, bits) {\r\n        return (word >>> bits) | (word << (32 - bits));\r\n    },\r\n\r\n    sha256(data) {\r\n        // Copy default state\r\n        const STATE = this.DEFAULT_STATE.slice();\r\n\r\n        const length = data.length;\r\n\r\n        // Pad data\r\n        const bitLength = length * 8;\r\n        const newBitLength = (512 - ((bitLength + 64) % 512) - 1) + bitLength + 65;\r\n\r\n        const bytes = new this.uint8Array(newBitLength / 8);\r\n        const words = new this.uint32Array(bytes.buffer);\r\n\r\n        bytes.set(data, 0);\r\n        bytes[length] = 0b10000000;\r\n        words[words.length - 1] = this.convertEndian(bitLength);\r\n\r\n        for (let block = 0; block < newBitLength / 32; block += 16) {\r\n            const workingState = STATE.slice();\r\n\r\n            for (let round = 0; round < 64; round++) {\r\n                let MRound;\r\n                if (round < 16) {\r\n                    MRound = this.convertEndian(words[block + round]);\r\n                } else {\r\n                    const gamma0x = this.M[round - 15];\r\n                    const gamma1x = this.M[round - 2];\r\n                    MRound = this.M[round - 7] + this.M[round - 16] +\r\n                        (this.rightRotate(gamma0x, 7) ^ this.rightRotate(gamma0x, 18) ^ (gamma0x >>> 3)) +\r\n                        (this.rightRotate(gamma1x, 17) ^ this.rightRotate(gamma1x, 19) ^ (gamma1x >>> 10));\r\n                }\r\n\r\n                this.M[round] = MRound |= 0;\r\n\r\n                const t1 =\r\n                    (this.rightRotate(workingState[4], 6) ^ this.rightRotate(workingState[4], 11) ^ this.rightRotate(workingState[4], 25)) +\r\n                    ((workingState[4] & workingState[5]) ^ (~workingState[4] & workingState[6])) +\r\n                    workingState[7] + MRound + this.ROUND_CONSTANTS[round];\r\n                const t2 =\r\n                    (this.rightRotate(workingState[0], 2) ^ this.rightRotate(workingState[0], 13) ^ this.rightRotate(workingState[0], 22)) +\r\n                    ((workingState[0] & workingState[1]) ^ (workingState[2] & (workingState[0] ^ workingState[1])));\r\n\r\n                for (let i = 7; i > 0; i--) {\r\n                    workingState[i] = workingState[i - 1];\r\n                }\r\n                workingState[0] = (t1 + t2) | 0;\r\n                workingState[4] = (workingState[4] + t1) | 0;\r\n            }\r\n\r\n            for (let round = 0; round < 8; round++) {\r\n                STATE[round] = (STATE[round] + workingState[round]) | 0;\r\n            }\r\n        }\r\n\r\n        return new this.uint8Array(new this.uint32Array(\r\n            STATE.map((val) => this.convertEndian(val))\r\n        ).buffer);\r\n    },\r\n\r\n    hmac(key, data) {\r\n        if (key.length > 64) {\r\n            key = this.sha256(key);\r\n        }\r\n\r\n        if (key.length < 64) {\r\n            const tmp = new Uint8Array(64);\r\n            tmp.set(key, 0);\r\n            key = tmp;\r\n        }\r\n\r\n        const innerKey = new Uint8Array(64);\r\n        const outerKey = new Uint8Array(64);\r\n        for (let i = 0; i < 64; i++) {\r\n            innerKey[i] = 0x36 ^ key[i];\r\n            outerKey[i] = 0x5c ^ key[i];\r\n        }\r\n\r\n        const msg = new Uint8Array(data.length + 64);\r\n        msg.set(innerKey, 0);\r\n        msg.set(data, 64);\r\n\r\n        const result = new Uint8Array(64 + 32);\r\n        result.set(outerKey, 0);\r\n        result.set(this.sha256(msg), 64);\r\n\r\n        return this.sha256(result);\r\n    },\r\n\r\n    sign(inputKey, inputData) {\r\n        const encoder = new TextEncoder(\"utf-8\");\r\n        const key = typeof inputKey === \"string\" ? encoder.encode(inputKey) : inputKey;\r\n        const data = typeof inputData === \"string\" ? encoder.encode(inputData) : inputData;\r\n        return this.hmac(key, data);\r\n    },\r\n\r\n    hash(str) {\r\n        const encoder = new TextEncoder(\"utf-8\");\r\n        return this.hex(this.sha256(encoder.encode(str)));\r\n    },\r\n\r\n    hex(bin) {\r\n        let x = bin.reduce((acc, val) =>\r\n            acc + (\"00\" + val.toString(16)).slice(-2), \"\");\r\n        return x;\r\n    }\r\n};\r\n\r\nexport { generateNonce, generateHmac, HMacGenerator };","class PartnerAppRequestLogModel {\r\n    constructor(appId, signature, nonce, appUserId, appRequestData, sessionId, deviceId=\"\") {\r\n        this.AppId = appId || \"\";\r\n        this.Signature = signature || \"\";\r\n        this.Nonce = nonce || \"\";\r\n        this.AppUserId = appUserId || \"\";\r\n        this.AppRequestData = appRequestData || \"\";\r\n        this.SessionId = sessionId || \"\";\r\n        this.deviceId = deviceId || \"\";\r\n    }\r\n}\r\n\r\nexport { PartnerAppRequestLogModel }","const ClimateStatus = {\r\n    NotSet: 0,\r\n    NotGreenOnContract: 1,\r\n    NotGreenOnCarbonBudget: 2,\r\n    NotGreenOnBoth: 3,\r\n    NotGreenOnDeviceCarbonBudget: 4,\r\n    GreenOnContract: 5,\r\n    GreenOnCarbonBudget: 6,\r\n    GreenOnBoth: 7,\r\n    GreenOnDeviceCarbonBudget: 8,\r\n    GreenOnEACs: 9,\r\n};\r\n\r\nconst ClimateStatusModel = {\r\n    Green: 0,\r\n    Aligned: 1,\r\n    Red: 2,\r\n    Undefined: 9,\r\n};\r\n\r\nfunction mapClimateStatusToModel(status) {\r\n    switch (status) {\r\n        case ClimateStatus.GreenOnContract:\r\n        case ClimateStatus.GreenOnBoth:\r\n        case ClimateStatus.GreenOnEACs:\r\n            return ClimateStatusModel.Green;\r\n\r\n        case ClimateStatus.NotGreenOnContract:\r\n        case ClimateStatus.NotGreenOnCarbonBudget:\r\n        case ClimateStatus.NotGreenOnBoth:\r\n        case ClimateStatus.NotGreenOnDeviceCarbonBudget:\r\n            return ClimateStatusModel.Red;\r\n\r\n        case ClimateStatus.GreenOnDeviceCarbonBudget:\r\n        case ClimateStatus.GreenOnCarbonBudget:\r\n        case ClimateStatus.NotSet:\r\n            return ClimateStatusModel.Aligned;\r\n\r\n        default:\r\n            return ClimateStatusModel.Undefined;\r\n    }\r\n}\r\n\r\nexport { ClimateStatus, ClimateStatusModel, mapClimateStatusToModel }","import { ClimateStatus, ClimateStatusModel, mapClimateStatusToModel } from './ClimateStatusMapper.js'\r\n\r\nconst ApiHandlers = {\r\n    partnerAppRequestLogRegister(model) {\r\n        try {\r\n            const queryString = new URLSearchParams(model).toString();\r\n            const fullUrl = `umweltify://v1/partnerAppRequestLogRegister?${queryString}`;\r\n            this.simulateCustomProtocolCall(fullUrl);\r\n        } catch {\r\n        }\r\n    },\r\n\r\n    async getDeviceStatus(model, getDeviceStatusCallback) {\r\n        const apiUrl = \"https://localhost:7152/v1/PartnerAppProtocol/GetDeviceStatus\";\r\n        const apiKeyName = \"UMWELTIFY-API-KEY\";\r\n        const apiKeyValue = \"n1Sxz6ksSNj3BNnD3pU3AUDu0aSApStd\";\r\n\r\n        let attempt = 0;\r\n        const maxAttempts = 20;\r\n        var timeout = 1000;\r\n\r\n        while (attempt < maxAttempts) {\r\n            try {\r\n                const response = await fetch(apiUrl, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        [apiKeyName]: apiKeyValue,\r\n                    },\r\n                    body: JSON.stringify(model),\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! Status: ${response.status}`);\r\n                }\r\n\r\n                const responseData = await response.json();\r\n\r\n                const isGreen = responseData.Data?.IsGreen || false;\r\n                const climateStatusModel = mapClimateStatusToModel(responseData.Data?.ClimateStatus ?? ClimateStatusModel.Undefined);\r\n                const deviceId = responseData.Data?.DeviceId;\r\n\r\n                if (deviceId) {\r\n                    await this.saveDeviceIdToIndexedDB(deviceId);\r\n                }\r\n\r\n                getDeviceStatusCallback(isGreen, climateStatusModel);\r\n                break;\r\n            } catch (error) {                \r\n                attempt++;\r\n                if (attempt >= maxAttempts) {                    \r\n                    return {\r\n                        isGreen: false,\r\n                        climateStatusModel: ClimateStatusModel.Undefined,\r\n                    };\r\n                }\r\n                await new Promise(resolve => setTimeout(resolve, timeout));\r\n                timeout += 500;\r\n            }\r\n        }\r\n    },\r\n\r\n    async getDeviceStatusByDeviceId(model, getDeviceStatusCallback) {\r\n        const apiUrl = \"https://localhost:7152/v1/PartnerAppProtocol/GetDeviceStatusByDeviceId\";\r\n        const apiKeyName = \"UMWELTIFY-API-KEY\";\r\n        const apiKeyValue = \"n1Sxz6ksSNj3BNnD3pU3AUDu0aSApStd\";\r\n\r\n        try {\r\n            const response = await fetch(apiUrl, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    [apiKeyName]: apiKeyValue,\r\n                },\r\n                body: JSON.stringify(model),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! Status: ${response.status}`);\r\n            }\r\n\r\n            const responseData = await response.json();\r\n\r\n            const isGreen = responseData.Data?.IsGreen || false;\r\n            const climateStatusModel = responseData.Data?.ClimateStatus ?? ClimateStatusModel.Undefined;\r\n\r\n            getDeviceStatusCallback(isGreen, climateStatusModel);\r\n        } catch {            \r\n            return {\r\n                isGreen: false,\r\n                climateStatusModel: ClimateStatusModel.Undefined,\r\n            };\r\n        }\r\n    },\r\n\r\n    simulateCustomProtocolCall(url) {\r\n        const a = document.createElement(\"a\");\r\n        a.href = url;\r\n        a.style.display = \"none\";\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n    },\r\n    async saveDeviceIdToIndexedDB(deviceId) {        \r\n        return new Promise((resolve, reject) => {\r\n            const request = indexedDB.open('PersistentStorage', 2);\r\n\r\n            request.onupgradeneeded = (event) => {\r\n                const db = event.target.result;\r\n                if (!db.objectStoreNames.contains('deviceData')) {\r\n                    db.createObjectStore('deviceData', { keyPath: 'key' });\r\n                }\r\n            };\r\n\r\n            request.onsuccess = async (event) => {\r\n                const db = event.target.result;\r\n\r\n                const transaction = db.transaction('deviceData', 'readwrite');\r\n                const store = transaction.objectStore('deviceData');\r\n\r\n                const putRequest = store.put({ key: 'DeviceId', value: deviceId });\r\n\r\n                putRequest.onsuccess = () => {                    \r\n                    resolve();\r\n                };\r\n\r\n                putRequest.onerror = (event) => {\r\n                    reject(event.target.error);\r\n                };\r\n            };\r\n\r\n            request.onerror = (event) => {\r\n                reject(event.target.error);\r\n            };\r\n        });\r\n    }    \r\n};\r\n\r\nexport { ApiHandlers };","import { generateNonce, generateHmac } from \"./HmacUtils.js\";\r\nimport { PartnerAppRequestLogModel } from \"./PartnerAppRequestLogModel.js\";\r\nimport { ApiHandlers } from \"./ApiHandlers.js\";\r\n\r\nconst ClimateinProtocol = {\r\n    async delay(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    },\r\n    async getDeviceStatus(appId, appSecret, getDeviceStatusCallback) {\r\n        const deviceId = await this.getDeviceIdFromIndexedDB();\r\n        if (deviceId === undefined || deviceId === null) {\r\n            const sessionId = this.generateSessionId();\r\n            const model = await this.generateModel(appId, appSecret, sessionId);\r\n\r\n            ApiHandlers.partnerAppRequestLogRegister(model);\r\n            return ApiHandlers.getDeviceStatus(model, getDeviceStatusCallback);\r\n        }\r\n        else {\r\n            const sessionId = this.generateSessionId();\r\n            const model = await this.generateModel(appId, appSecret, sessionId, deviceId);\r\n            return ApiHandlers.getDeviceStatusByDeviceId(model, getDeviceStatusCallback);\r\n        }\r\n\r\n        console.error = () => { };\r\n        console.warn = () => { };\r\n        console.log = () => { };\r\n    },\r\n\r\n    generateSessionId() {\r\n        return Math.random().toString(36).substring(2);\r\n    },\r\n\r\n    async generateModel(appId, appSecret, sessionId, deviceId=\"\") {\r\n        const nonce = generateNonce();\r\n        const signature = await generateHmac(appId, appSecret, nonce);\r\n\r\n        return new PartnerAppRequestLogModel(appId, signature, nonce, \"\", \"\", sessionId, deviceId);\r\n    },\r\n    async getDeviceIdFromIndexedDB() {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            const request = indexedDB.open('PersistentStorage', 2);\r\n\r\n            request.onupgradeneeded = (event) => {\r\n                const db = event.target.result;\r\n                if (!db.objectStoreNames.contains('deviceData')) {\r\n                    db.createObjectStore('deviceData', { keyPath: 'key' });\r\n                }\r\n            };\r\n\r\n            request.onsuccess = (event) => {\r\n                const db = event.target.result;\r\n\r\n                if (!db.objectStoreNames.contains('deviceData')) {\r\n                    resolve(undefined);\r\n                    return;\r\n                }\r\n\r\n                const transaction = db.transaction('deviceData', 'readonly');\r\n                const store = transaction.objectStore('deviceData');\r\n                const getRequest = store.get('DeviceId');\r\n\r\n                getRequest.onsuccess = (event) => {\r\n                    if (event.target.result) {\r\n                        resolve(event.target.result.value);\r\n                    } else {\r\n                        resolve(null);\r\n                    }\r\n                };\r\n\r\n                getRequest.onerror = (event) => {\r\n                    reject(event.target.error);\r\n                };\r\n            };\r\n\r\n            request.onerror = (event) => {\r\n                reject(event.target.error);\r\n            };\r\n        });\r\n    }\r\n};\r\n\r\nexport { ClimateinProtocol }\r\n\r\nwindow.ClimateinProtocol = ClimateinProtocol;","import { ClimateinProtocol } from \"./ClimateinProtocol.js\";\r\nimport { generateNonce, generateHmac } from \"./HmacUtils.js\";\r\nimport { PartnerAppRequestLogModel } from \"./PartnerAppRequestLogModel.js\";\r\nimport { ApiHandlers } from \"./ApiHandlers.js\";\r\n\r\n\r\n\r\nwindow.ClimateinProtocol = ClimateinProtocol;\r\n\r\n//export {\r\n//    ClimateinProtocol,\r\n//    generateNonce, generateHmac,\r\n//    PartnerAppRequestLogModel,\r\n//    ApiHandlers\r\n//}"],"names":["generateNonce","Math","random","toString","substring","generateHmac","_x","_x2","_x3","_generateHmac","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","appId","appSecret","nonce","data","signature","wrap","_callee$","_context","prev","next","concat","HMacGenerator","initializeConstants","sign","abrupt","hex","stop","uint8Array","Uint8Array","uint32Array","Uint32Array","pow","DEFAULT_STATE","ROUND_CONSTANTS","M","getFractionalBits","n","nPrime","x","isPrime","factor","LittleEndian","buffer","convertEndian","word","rightRotate","bits","sha256","_this","STATE","slice","length","bitLength","newBitLength","bytes","words","set","block","workingState","round","MRound","gamma0x","gamma1x","t1","t2","i","map","val","hmac","key","tmp","innerKey","outerKey","msg","result","inputKey","inputData","encoder","TextEncoder","encode","hash","str","bin","reduce","acc","PartnerAppRequestLogModel","_createClass","appUserId","appRequestData","sessionId","deviceId","undefined","_classCallCheck","AppId","Signature","Nonce","AppUserId","AppRequestData","SessionId","ClimateStatus","NotSet","NotGreenOnContract","NotGreenOnCarbonBudget","NotGreenOnBoth","NotGreenOnDeviceCarbonBudget","GreenOnContract","GreenOnCarbonBudget","GreenOnBoth","GreenOnDeviceCarbonBudget","GreenOnEACs","ClimateStatusModel","Green","Aligned","Red","Undefined","mapClimateStatusToModel","status","ApiHandlers","partnerAppRequestLogRegister","model","queryString","URLSearchParams","fullUrl","simulateCustomProtocolCall","_unused","getDeviceStatus","getDeviceStatusCallback","apiUrl","apiKeyName","apiKeyValue","attempt","maxAttempts","timeout","_responseData$Data","_responseData$Data$Cl","_responseData$Data2","_responseData$Data3","response","responseData","isGreen","climateStatusModel","fetch","method","headers","_defineProperty","body","JSON","stringify","sent","ok","Error","json","Data","IsGreen","DeviceId","saveDeviceIdToIndexedDB","t0","Promise","resolve","setTimeout","getDeviceStatusByDeviceId","_callee2","_responseData$Data4","_responseData$Data$Cl2","_responseData$Data5","_callee2$","_context2","url","a","document","createElement","href","style","display","appendChild","click","removeChild","_callee4","_callee4$","_context4","reject","request","indexedDB","open","onupgradeneeded","event","db","target","objectStoreNames","contains","createObjectStore","keyPath","onsuccess","_ref","_callee3","transaction","store","putRequest","_callee3$","_context3","objectStore","put","value","onerror","error","ClimateinProtocol","delay","ms","_sessionId","_model","getDeviceIdFromIndexedDB","generateSessionId","generateModel","console","warn","log","_arguments","getRequest","get","window"],"mappings":"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"}